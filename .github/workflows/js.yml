name: Build and Deploy JavaScript Application

on:
  push:
    branches:
      - main
    # paths:
    #   - 'nodejs/**'
    #   - 'reactjs/**'

jobs:
  build-nodejs-image:
    runs-on: [ubuntu-latest]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Clone code into the runner
        uses: actions/checkout@v4.1.1

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies for React.js
        run: |
          cd reactjs;
          npm init -y;
          npm install;

      - name: Build ReactJS
        run: |
          cd reactjs;
          npm run build;
      
      # - name: Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Docker Login
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create .env file
        run: |
          cd nodejs;
          touch ./config/.env;
          pwd;
          ls -1a config;

      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     push: true
      #     context: ./
      #     file: ./Dockerfile
      #     tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ secrets.DOCKER_VERSION }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

  # deploy-nodejs-container:
  #   needs: build
  #   runs-on: [prt-cicd-portfolio]
  #   steps:
  #     - name: Deploy docker image
  #       run: sudo sh /home/ubuntu/script/deploy.sh ${{ secrets.DOCKER_NGINX }} ${{ secrets.DOCKER_APP }} ${{ secrets.DOCKER_APP_PORT }} ${{ secrets.DOCKER_NETWORK }} ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_REPOSITORY }}
